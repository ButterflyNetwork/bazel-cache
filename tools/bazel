#!/usr/bin/env python
import os
import json
import sys
import subprocess

COMMANDS = (
    "build",
    "mobile-install",
    "run",
    "test",
)

CACHE_URL = "https://MY-CLOUD-RUN-SERVICE.a.run.app"
CACHE_CONFIG_ARG = "--config=cache"

def google_application_credentials():
    return os.environ.get("GOOGLE_APPLICATION_CREDENTIALS") or \
            os.path.join(os.environ["HOME"], ".config/gcloud/application_default_credentials.json")

def is_google_identity_a_user():
    with open(google_application_credentials()) as f:
        data = json.load(f)
        return data.get("type") == "authorized_user"

def get_identity_token(audiences):
    cmd = ["gcloud", "auth", "print-identity-token"]
    if not is_google_identity_a_user():
        cmd += ["--audiences=%s" % audiences]
    return subprocess.check_output(cmd).rstrip().decode("utf-8")

def cache_enabled(args):
    return CACHE_CONFIG_ARG in args

def command_idx(args):
    for command in COMMANDS:
        try:
            return args.index(command)
        except ValueError:
            continue
    return -1

def main(argv):
    argv[0] = os.environ.get("BAZEL_REAL", argv[0])
    idx = command_idx(argv)
    if cache_enabled(argv) and idx >= 0:
        argv.insert(idx+1, "--remote_header=Authorization=Bearer " + get_identity_token(CACHE_URL))
    os.execvp(argv[0], argv)
    return 1

sys.exit(main(sys.argv))
